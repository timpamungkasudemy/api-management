version: "3.7"

networks:
 kong-net:
  name: kong-net
  driver: bridge
  ipam:
    config:
      - subnet: 172.1.1.0/24

services:

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    container_name: kong-database
    image: postgres:11.1-alpine
    restart: always
    networks:
      - kong-net
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 3s
      retries: 5

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    container_name: kong-migration
    image: kong:latest
    command: "kong migrations bootstrap"
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_PG_HOST: kong-database
    links:
      - kong-database
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    container_name: kong
    image: kong:latest
    restart: always
    networks:
      kong-net:
        ipv4_address: 172.1.1.40
    environment:
      KONG_PG_HOST: kong-database
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_LISTEN_SSL: 0.0.0.0:8444
      KONG_DB_UPDATE_FREQUENCY: 1m
    depends_on:
      - kong-migration
      - kong-database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 30s
      timeout: 3s
      retries: 10
    ports:
      - "8001:8001"
      - "8444:8444"
      - "80:8000"
      - "443:8443"

  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    container_name: konga-prepare
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://kong@kong-database:5432/konga_db"
    networks:
      - kong-net
    restart: on-failure
    links:
      - kong-database
    depends_on:
      - kong-database

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    container_name: konga
    image: pantsel/konga:latest
    restart: always
    networks:
      - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      # any string will OK for token
      TOKEN_SECRET: iu7YDcPLiZkozQXzZ9kka3Ee1Vid5ZgQ
      DB_DATABASE: konga_db
      NODE_ENV: production
    depends_on:
      - kong-database
    ports:
      - "1337:1337"
      
  #######################################
  # Demo services : alpha, beta, gamma, omega
  #######################################
  alpha:
    container_name: alpha
    image: timpamungkas/alpha:latest
    restart: always
    networks:
      kong-net:
        ipv4_address: 172.1.1.11
    ports:
      - "9001:9001"
      
  beta:
    container_name: beta
    image: timpamungkas/beta:latest
    restart: always
    networks:
      kong-net:
        ipv4_address: 172.1.1.12
    ports:
      - "9002:9002"
      
  gamma:
    container_name: gamma
    image: timpamungkas/gamma:latest
    restart: always
    networks:
      kong-net:
        ipv4_address: 172.1.1.13
    ports:
      - "9003:9003"

  omega:
    container_name: omega
    image: timpamungkas/omega:latest
    restart: always
    networks:
      kong-net:
        ipv4_address: 172.1.1.14
    ports:
      - "9004:9004"